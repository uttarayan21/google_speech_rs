(function() {
    var type_impls = Object.fromEntries([["pyo3",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Element-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/buffer.rs.html#679\">Source</a><a href=\"#impl-Element-for-i32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"pyo3/buffer/trait.Element.html\" title=\"trait pyo3::buffer::Element\">Element</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_compatible_format\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/buffer.rs.html#679\">Source</a><a href=\"#method.is_compatible_format\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"pyo3/buffer/trait.Element.html#tymethod.is_compatible_format\" class=\"fn\">is_compatible_format</a>(format: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.1/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Gets whether the element specified in the format string is potentially compatible.\nAlignment and size are checked separately from this function.</div></details></div></details>","Element","pyo3::ffi::PY_INT32_T","pyo3::ffi::Py_UNICODE"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPyObject%3C'py%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#impl-FromPyObject%3C'py%3E-for-i32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'py&gt; <a class=\"trait\" href=\"pyo3/conversion/trait.FromPyObject.html\" title=\"trait pyo3::conversion::FromPyObject\">FromPyObject</a>&lt;'py&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#method.extract_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.FromPyObject.html#tymethod.extract_bound\" class=\"fn\">extract_bound</a>(obj: &amp;<a class=\"struct\" href=\"pyo3/struct.Bound.html\" title=\"struct pyo3::Bound\">Bound</a>&lt;'_, <a class=\"struct\" href=\"pyo3/types/struct.PyAny.html\" title=\"struct pyo3::types::PyAny\">PyAny</a>&gt;) -&gt; <a class=\"type\" href=\"pyo3/type.PyResult.html\" title=\"type pyo3::PyResult\">PyResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Extracts <code>Self</code> from the bound smart pointer <code>obj</code>. <a href=\"pyo3/conversion/trait.FromPyObject.html#tymethod.extract_bound\">Read more</a></div></details></div></details>","FromPyObject<'py>","pyo3::ffi::PY_INT32_T","pyo3::ffi::Py_UNICODE"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPy%3CPy%3CPyAny%3E%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#impl-IntoPy%3CPy%3CPyAny%3E%3E-for-i32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPy.html\" title=\"trait pyo3::conversion::IntoPy\">IntoPy</a>&lt;<a class=\"struct\" href=\"pyo3/struct.Py.html\" title=\"struct pyo3::Py\">Py</a>&lt;<a class=\"struct\" href=\"pyo3/types/struct.PyAny.html\" title=\"struct pyo3::types::PyAny\">PyAny</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_py\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#method.into_py\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.IntoPy.html#tymethod.into_py\" class=\"fn\">into_py</a>(self, py: <a class=\"struct\" href=\"pyo3/marker/struct.Python.html\" title=\"struct pyo3::marker::Python\">Python</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"pyo3/type.PyObject.html\" title=\"type pyo3::PyObject\">PyObject</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.23.0: <code>IntoPy</code> is going to be replaced by <code>IntoPyObject</code>. See the migration guide (https://pyo3.rs/v0.23.0/migration) for more information.</span></div></span><div class='docblock'>Performs the conversion.</div></details></div></details>","IntoPy<Py<PyAny>>","pyo3::ffi::PY_INT32_T","pyo3::ffi::Py_UNICODE"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPyObject%3C'py%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#impl-IntoPyObject%3C'py%3E-for-i32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'py&gt; <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPyObject.html\" title=\"trait pyo3::conversion::IntoPyObject\">IntoPyObject</a>&lt;'py&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"pyo3/conversion/trait.IntoPyObject.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"pyo3/types/struct.PyInt.html\" title=\"struct pyo3::types::PyInt\">PyInt</a></h4></section></summary><div class='docblock'>The Python output type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"pyo3/conversion/trait.IntoPyObject.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"pyo3/struct.Bound.html\" title=\"struct pyo3::Bound\">Bound</a>&lt;'py, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPyObject.html\" title=\"trait pyo3::conversion::IntoPyObject\">IntoPyObject</a>&lt;'py&gt;&gt;::<a class=\"associatedtype\" href=\"pyo3/conversion/trait.IntoPyObject.html#associatedtype.Target\" title=\"type pyo3::conversion::IntoPyObject::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>The smart pointer type to use. <a href=\"pyo3/conversion/trait.IntoPyObject.html#associatedtype.Output\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"pyo3/conversion/trait.IntoPyObject.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pyobject\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#method.into_pyobject\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.IntoPyObject.html#tymethod.into_pyobject\" class=\"fn\">into_pyobject</a>(self, py: <a class=\"struct\" href=\"pyo3/marker/struct.Python.html\" title=\"struct pyo3::marker::Python\">Python</a>&lt;'py&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"pyo3/conversion/trait.IntoPyObject.html#associatedtype.Output\" title=\"type pyo3::conversion::IntoPyObject::Output\">Output</a>, Self::<a class=\"associatedtype\" href=\"pyo3/conversion/trait.IntoPyObject.html#associatedtype.Error\" title=\"type pyo3::conversion::IntoPyObject::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","IntoPyObject<'py>","pyo3::ffi::PY_INT32_T","pyo3::ffi::Py_UNICODE"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBound%3C'_,+PyInt%3E%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/types/num.rs.html#67\">Source</a><a href=\"#impl-PartialEq%3CBound%3C'_,+PyInt%3E%3E-for-i32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"pyo3/struct.Bound.html\" title=\"struct pyo3::Bound\">Bound</a>&lt;'_, <a class=\"struct\" href=\"pyo3/types/struct.PyInt.html\" title=\"struct pyo3::types::PyInt\">PyInt</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/types/num.rs.html#67\">Source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"pyo3/struct.Bound.html\" title=\"struct pyo3::Bound\">Bound</a>&lt;'_, <a class=\"struct\" href=\"pyo3/types/struct.PyInt.html\" title=\"struct pyo3::types::PyInt\">PyInt</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bound<'_, PyInt>>","pyo3::ffi::PY_INT32_T","pyo3::ffi::Py_UNICODE"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPyObject-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#impl-ToPyObject-for-i32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"pyo3/conversion/trait.ToPyObject.html\" title=\"trait pyo3::conversion::ToPyObject\">ToPyObject</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#322\">Source</a><a href=\"#method.to_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.ToPyObject.html#tymethod.to_object\" class=\"fn\">to_object</a>(&amp;self, py: <a class=\"struct\" href=\"pyo3/marker/struct.Python.html\" title=\"struct pyo3::marker::Python\">Python</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"pyo3/type.PyObject.html\" title=\"type pyo3::PyObject\">PyObject</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.23.0: <code>ToPyObject</code> is going to be replaced by <code>IntoPyObject</code>. See the migration guide (https://pyo3.rs/v0.23.0/migration) for more information.</span></div></span><div class='docblock'>Converts self into a Python object.</div></details></div></details>","ToPyObject","pyo3::ffi::PY_INT32_T","pyo3::ffi::Py_UNICODE"]]],["pyo3_ffi",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[13560,16]}