searchState.loadedDescShard("pyo3_ffi", 0, "Raw FFI declarations for Python’s C API.\nNo value.\nNo value.\nMaximum number of dimensions\nbuilt-in ‘object’\nThis variant corresponds with <code>METH_VARARGS</code> <em>or</em> <code>METH_NOARGS</code> …\nThis variant corresponds with <code>METH_FASTCALL</code>.\nThis variant corresponds with <code>METH_FASTCALL</code> | <code>METH_KEYWORDS</code>…\nThis variant corresponds with <code>METH_VARARGS</code> | <code>METH_KEYWORDS</code>.\nThis variant corresponds with <code>METH_METHOD</code> | <code>METH_FASTCALL</code> …\nReturns a pointer to a <code>PyDateTime_CAPI</code> instance\nCheck if <code>op</code> is a <code>PyDateTimeAPI.DateTimeType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateTimeType</code>.\nRetrieve the fold component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the hour component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the microsecond component of a <code>PyDateTime_DateTime</code>…\nRetrieve the minute component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the second component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the tzinfo component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the days component of a <code>PyDateTime_Delta</code>.\nRetrieve the seconds component of a <code>PyDateTime_Delta</code>.\nRetrieve the seconds component of a <code>PyDateTime_Delta</code>.\nStructure representing a <code>datetime.date</code>\nStructure representing a <code>datetime.datetime</code>.\nStructure representing a <code>datetime.timedelta</code>.\nRetrieve the day component of a <code>PyDateTime_Date</code> or …\nRetrieve the month component of a <code>PyDateTime_Date</code> or …\nRetrieve the year component of a <code>PyDateTime_Date</code> or …\nPopulates the <code>PyDateTimeAPI</code> object\nRetrieve the fold component of a <code>PyDateTime_Time</code>. Returns …\nRetrieve the hour component of a <code>PyDateTime_Time</code>. Returns …\nRetrieve the microsecond component of a <code>PyDateTime_DateTime</code>…\nRetrieve the minute component of a <code>PyDateTime_Time</code>. …\nRetrieve the second component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the tzinfo component of a <code>PyDateTime_Time</code>. …\nStructure representing a <code>datetime.time</code>.\nType Check macros\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateType</code>.\nCheck if <code>op</code> is a <code>PyDateTimeAPI.DetaType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DeltaType</code>.\nRepresents the PyGetSetDef structure.\nMacro, trading safety for speed\nMacro, <em>only</em> to be used to fill in brand new lists\nRepresents the PyMemberDef structure.\nRepresents the PyMethodDef structure.\nFunction types used to implement Python callables.\nThis union is anonymous in CPython, so the name was given …\nbuilt-in ‘super’\nCheck if <code>op</code> is a <code>PyDateTimeAPI.TZInfoType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TZInfoType</code>.\nCheck if <code>op</code> is a <code>PyDateTimeAPI.TimeType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TimeType</code>.\nMacro, trading safety for speed\nMacro, <em>only</em> to be used to fill in brand new tuples\nbuilt-in ‘type’\nSet if the type allows subclassing\nObjects support garbage collection (see objimp.h)\nSet if the type implements the vectorcall protocol (PEP …\nSet if the type object is dynamically allocated\nSet if the type is ‘ready’ – fully initialized\nSet while the type is being ‘readied’, to prevent …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis variant corresponds with <code>METH_FASTCALL</code>.\nThis variant corresponds with <code>METH_FASTCALL</code> | <code>METH_KEYWORDS</code>…\nStructure representing a <code>datetime.datetime</code> without a <code>tzinfo</code>…\nStructure representing a <code>datetime.time</code> without a <code>tzinfo</code> …\nGet the frame evaluation function.\nSet the frame evaluation function.\nGet the <code>ascii</code> field of the <code>PyASCIIObject</code> state bitfield.\nThis is a helper macro to create a <code>&amp;&#39;static CStr</code>.\nGet the <code>compact</code> field of the <code>PyASCIIObject</code> state bitfield.\nC API Compatibility Shims\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the <code>interned</code> field of the <code>PyASCIIObject</code> state bitfield.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the <code>kind</code> field of the <code>PyASCIIObject</code> state bitfield.\nOwned reference\nSet the <code>ascii</code> flag of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>compact</code> flag of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>interned</code> field of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>kind</code> field of the <code>PyASCIIObject</code> state bitfield.\nA bit field with various properties.\nSafety\nSafety")