searchState.loadedDescShard("pyo3_build_config", 0, "Configuration used by PyO3 for conditional support of …\nA list of python interpreter compile-time preprocessor …\nConfiguration needed by PyO3 to cross-compile for a target …\nConfiguration needed by PyO3 to build for the correct …\nAn LLVM target “triple”. Historically such things had …\nWhether linking against the stable/limited Python 3 API.\nAdds linker arguments suitable for PyO3’s …\nAdds linker arguments suitable for linking against the …\nThe “architecture” (and sometimes the subarchitecture).\nThe “binary format” (rarely used).\nAdditional relevant Python build flags / configuration …\nDetect whether we are cross compiling and return an …\nThe C data model for a given target. If the model is not …\nReturn the default calling convention for the given target …\nReturn the endianness of this target’s architecture.\nThe “environment” on top of the operating system …\nPath of host <code>python</code> executable.\nAdditional lines to <code>println!()</code> from Cargo build scripts.\nFinds <code>_sysconfigdata*.py</code> files for detected Python …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse a triple from an LLVM target triple.\nGenerate from parsed sysconfigdata file\nLoads the configuration determined from the build …\nReturn the triple for the current host.\nThe Python implementation flavor.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe directory containing the Python library to link …\nThe directory containing the Python library to link …\nThe name of the link library defining Python.\nThe “operating system” (sometimes also the …\nParse sysconfigdata file\nReturn the pointer width of this target’s architecture.\nWidth in bits of pointers on the target machine.\nmacOS Python3.framework requires special rpath handling\nRun a python script using the <code>InterpreterConfig::executable</code>…\nRun a python script using the <code>InterpreterConfig::executable</code>…\nWhether link library is shared.\nWhether to suppress emitting of <code>cargo:rustc-link-*</code> lines …\nReturn a <code>Triple</code> with all unknown fields.\nAdds all the <code>#[cfg]</code> flags to the current compilation.\nThe “vendor” (whatever that means).\nPython <code>X.Y</code> version. e.g. <code>3.9</code>.")